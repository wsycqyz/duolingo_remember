name: Make Duolingo words

on:
  workflow_dispatch:

env:
  # uncomment these if you are using azure
  API_TYPE: ${{ secrets.API_TYPE }}
  OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
  OPENAI_ENGINE: ${{ secrets.OPENAI_ENGINE }}
  OPENAI_API_VERSION: ${{ secrets.OPENAI_API_VERSION }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  EDGE_GPT_COOKIE: ${{ secrets.EDGE_GPT_COOKIE }}
  LATEST_WORDS_NUMBER: 20

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: agu
        run: sudo apt-get update
      - name: Setup ffmpeg for differnt platforms 
        uses: FedericoCarboni/setup-ffmpeg@master
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Send new words
        run: |
          python duolingo.py ${{ secrets.DUOLINGO_USERNAME }} ${{ secrets.DUOLINGO_JWT }}  --tele_token ${{ secrets.TELE_TOKEN }} --tele_chat_id ${{ secrets.TELE_CHAT_ID }} --latest_number ${{ env.LATEST_WORDS_NUMBER }}

      - name: Check file new existence
        id: check_mp3_new_files
        uses: andstor/file-existence-action@v2
        with:
          files: "MP3_NEW/1.mp3"

      - name: Check file conversation existence
        id: check_mp3_conversation_files
        uses: andstor/file-existence-action@v2
        with:
          files: "CONVERSATION_NEW/1.mp3"

      - name: use ffmpeg combine and send new mp3
        run: | 
          ffmpeg -y -f concat -safe 0 -i <(find "$(pwd)"/MP3_NEW -iname "*.mp3" -printf "file "%p"\n" | sort -V) -c copy "$(pwd)"/$(date +"%m%d")_new_words.mp3
          curl -v -F "chat_id=${{ secrets.TELE_CHAT_ID }}" -F document=@$(date +"%m%d")_new_words.mp3 https://api.telegram.org/bot${{ secrets.TELE_TOKEN }}/sendDocument
          curl -v -F "chat_id=${{ secrets.TELE_CHAT_ID }}" -F document=@new_article.mp3 https://api.telegram.org/bot${{ secrets.TELE_TOKEN }}/sendDocument
        if: steps.check_mp3_new_files.outputs.files_exists == 'true'

      - name: use ffmpeg combine and send conversation mp3
        run: | 
          ffmpeg -y -f concat -safe 0 -i <(find "$(pwd)"/CONVERSATION_NEW -iname "*.mp3" -printf "file "%p"\n" | sort -V) -c copy "$(pwd)"/$(date +"%m%d")_conversation.mp3
          curl -v -F "chat_id=${{ secrets.TELE_CHAT_ID }}" -F document=@$(date +"%m%d")_conversation.mp3 https://api.telegram.org/bot${{ secrets.TELE_TOKEN }}/sendDocument
        if: steps.check_mp3_new_files.outputs.files_exists == 'true'
